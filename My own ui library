local UILibrary = {}

function UILibrary:AddWindow(data)
    local themes = {
        Dark = {
            FrameColor = Color3.fromRGB(45, 45, 45),
            TextColor = Color3.fromRGB(255, 255, 255),
            ButtonColor = Color3.fromRGB(25, 25, 25),
            ButtonTextColor = Color3.fromRGB(255, 255, 255),
            Gradient = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 0)),
                ColorSequenceKeypoint.new(0.1, Color3.fromRGB(25, 25, 25)),
                ColorSequenceKeypoint.new(0.2, Color3.fromRGB(45, 45, 45)),
                ColorSequenceKeypoint.new(0.3, Color3.fromRGB(50, 50, 50)),
                ColorSequenceKeypoint.new(0.5, Color3.fromRGB(65, 65, 65)),
                ColorSequenceKeypoint.new(0.7, Color3.fromRGB(50, 50, 50)),
                ColorSequenceKeypoint.new(0.8, Color3.fromRGB(45, 45, 45)),
                ColorSequenceKeypoint.new(0.9, Color3.fromRGB(25, 25, 25)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
            }
        }
    }

    local selectedTheme = themes[data.Theme] or themes.Dark

    local function parentgui(sg)
        local parent = game.Players.LocalPlayer:FindFirstChild("PlayerGui") or game:GetService("CoreGui")
        if parent then
            sg.Parent = parent
        end
    end

    local sg = Instance.new("ScreenGui")
    sg.Name = "Knowns | UILib | " .. math.random(1, 10000)
    sg.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    sg.ResetOnSpawn = false

    local exists = game.Players.LocalPlayer:FindFirstChild("PlayerGui"):FindFirstChild(sg.Name)
    if not exists then
        parentgui(sg)
    end

    local f = Instance.new("Frame", sg)
    f.Size = UDim2.fromScale(0.65, 0.3)
    f.Position = UDim2.fromScale(0.5, 0.5)
    f.AnchorPoint = Vector2.new(0.5, 0.5)
    f.BackgroundColor3 = selectedTheme.FrameColor
    f.Active = true
    f.Draggable = true

    local uic = Instance.new("UICorner", f)
    uic.CornerRadius = UDim.new(0, 8)

    local uig = Instance.new("UIGradient", f)
    uig.Color = selectedTheme.Gradient
    uig.Rotation = 55

    local invisf = Instance.new("Frame", f)
    invisf.Size = UDim2.fromScale(1, 0.2)
    invisf.Position = UDim2.fromScale(0, 0)
    invisf.BackgroundTransparency = 1

    local title = Instance.new("TextLabel", invisf)
    title.Size = UDim2.fromScale(0.4, 0.3)
    title.Position = UDim2.fromScale(0.01, 0)
    title.BackgroundTransparency = 1
    title.TextColor3 = selectedTheme.TextColor
    title.TextScaled = true
    title.Text = data.Title or "Welcome to Known's Hub"

    if data.SubTitle then
        local subTitle = Instance.new("TextLabel", invisf)
        subTitle.Size = UDim2.fromScale(0.4, 0.3)
        subTitle.Position = UDim2.fromScale(0.01, 0.5)
        subTitle.BackgroundTransparency = 1
        subTitle.TextColor3 = selectedTheme.TextColor
        subTitle.TextScaled = true
        subTitle.Text = data.SubTitle
    end

    local ft = Instance.new("TextButton", sg)
    ft.Size = UDim2.fromScale(0.13, 0.1)
    ft.Position = UDim2.fromScale(0.83, 0.01)
    ft.BackgroundColor3 = selectedTheme.ButtonColor
    ft.BorderSizePixel = 0
    ft.Text = "Open/Close"
    ft.TextColor3 = selectedTheme.ButtonTextColor
    ft.TextScaled = true
    ft.Active = true
    ft.Draggable = false

    ft.MouseButton1Click:Connect(function()
        f.Visible = not f.Visible
    end)

    return sg
end

return UILibrary
